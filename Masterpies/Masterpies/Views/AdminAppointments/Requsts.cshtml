
@model IEnumerable<Masterpies.Models.Appointment>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Requsts</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Search", "AdminAppointments"))
{
    <div class="title_right">
        <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
            <div class="input-group">
                <input type="text" class="form-control" name="search" id="search" placeholder="Search for...">
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">Go!</button>
                </span>
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.patientAge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.patientgender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.city)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AppointmentDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartTime)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.EndTime)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.IsAccepted)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.AspNetUser.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Device.DeviceName)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.TimeSlot.TimeSlotID)
            </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.patientAge)
            </td>

            <td>
                @if (item.patientgender == null)
                {
                    <span>select gender</span>
                }
                else if (item.patientgender == false)
                {
                    <span>Female</span>
                }
                else if (item.patientgender == true)
                {
                    <span>Male</span>

                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.city)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppointmentDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.EndTime)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.IsAccepted)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.AspNetUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Device.DeviceName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.TimeSlot.TimeSlotID)
                </td>*@
            <td>
                @*@Html.ActionLink("Accept", "accept", "AdminAppointments", new { id = item.AppointmentID }, new { @class = "btn btn-success" })*@
                @Html.ActionLink("Accept", "accept", "AdminAppointments", new { id = item.AppointmentID }, new { @class = "btn btn-success accept-link" })


            </td>
            <td>
                @*@Html.ActionLink("Reject", "reject", "AdminAppointments", new { id = item.AppointmentID }, new { @class = "btn btn-danger" })*@
                @Html.ActionLink("Reject", "reject", "AdminAppointments", new { id = item.AppointmentID }, new { @class = "btn btn-danger reject-link" })


            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.AppointmentID }) |
                @Html.ActionLink("Details", "Details", new { id = item.AppointmentID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.AppointmentID })
            </td>
        </tr>

    }

</table>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function () {
        $(".accept-link").click(function (event) {
            event.preventDefault();

            var link = $(this);

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, accept it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = link.attr("href");
                }
            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        $(".reject-link").click(function (event) {
            event.preventDefault();

            var link = $(this);

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, reject it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = link.attr("href");
                }
            });
        });
    });
</script>

